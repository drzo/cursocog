version: 2.1

executors:
  opencog-executor:
    docker:
      - image: opencog/opencog-deps
        user: root
        environment:
          CCACHE_DIR: /ws/ccache
      - image: opencog/relex
        name: relex
        command: /bin/sh -c "./opencog-server.sh"
      - image: opencog/postgres
        name: opencog-postgres
        environment:
          POSTGRES_USER: opencog_test
          POSTGRES_PASSWORD: cheese
          POSTGRES_DB: opencog_test
    working_directory: /ws/opencog

commands:
  build-component:
    description: "Build and install a component"
    parameters:
      component_name:
        type: string
        description: "Name of the component to build"
      depends_on:
        type: string
        default: ""
        description: "Dependencies to restore from workspace"
    steps:
      - run:
          name: "Clone << parameters.component_name >>"
          command: |
            git clone --depth 1 https://github.com/$CIRCLE_PROJECT_USERNAME/<< parameters.component_name >> /ws/<< parameters.component_name >>
      - run:
          name: "Build and Install << parameters.component_name >>"
          command: |
            mkdir -p /ws/<< parameters.component_name >>/build
            cd /ws/<< parameters.component_name >>/build
            cmake ..
            make -j2
            make -j2 install
            ldconfig
      - run:
          name: "Print << parameters.component_name >> test log if exists"
          command: |
            test -f /ws/<< parameters.component_name >>/build/tests/Testing/Temporary/LastTest.log && \
            cat /ws/<< parameters.component_name >>/build/tests/Testing/Temporary/LastTest.log || true
          when: always
      - persist_to_workspace:
          root: /ws/
          paths:
            - << parameters.component_name >>

jobs:
  cogutil:
    executor: opencog-executor
    steps:
      - attach_workspace:
          at: /ws
      - run:
          name: Start restoring ccache
          command: date +%d-%m-%Y > /tmp/date
      - restore_cache:
          keys:
            - ccache-{{ checksum "/tmp/date" }}
            - ccache-
      - build-component:
          component_name: cogutil
      - persist_to_workspace:
          root: /ws/
          paths:
            - ccache

  atomspace:
    executor: opencog-executor
    steps:
      - attach_workspace:
          at: /ws
      - restore_cache:
          name: Restore GHC Cache
          keys:
            - ghc-{{ checksum "/ws/atomspace/opencog/haskell/stack.yaml" }}-{{ arch }}
      - restore_cache:
          name: Restore Haskell Deps Cache
          keys:
            - haskelldeps-{{ checksum "/ws/atomspace/opencog/haskell/stack.yaml" }}-{{ checksum "/ws/atomspace/opencog/haskell/opencog-atomspace.cabal" }}-{{ arch }}
      - build-component:
          component_name: atomspace
      - save_cache:
          name: Save GHC Cache
          key: ghc-{{ checksum "/ws/atomspace/opencog/haskell/stack.yaml" }}-{{ arch }}
          paths:
            - /root/.stack
      - save_cache:
          name: Save Haskell Deps Cache
          key: haskelldeps-{{ checksum "/ws/atomspace/opencog/haskell/stack.yaml" }}-{{ checksum "/ws/atomspace/opencog/haskell/opencog-atomspace.cabal" }}-{{ arch }}
          paths:
            - /ws/atomspace/opencog/haskell/.stack-work

  unify:
    executor: opencog-executor
    steps:
      - attach_workspace:
          at: /ws
      - build-component:
          component_name: unify

  ure:
    executor: opencog-executor
    steps:
      - attach_workspace:
          at: /ws
      - build-component:
          component_name: ure

  atomspace-storage:
    executor: opencog-executor
    steps:
      - attach_workspace:
          at: /ws
      - build-component:
          component_name: atomspace-storage

  atomspace-rocks:
    executor: opencog-executor
    steps:
      - attach_workspace:
          at: /ws
      - build-component:
          component_name: atomspace-rocks

  atomspace-pgres:
    executor: opencog-executor
    steps:
      - attach_workspace:
          at: /ws
      - build-component:
          component_name: atomspace-pgres

  cogserver:
    executor: opencog-executor
    steps:
      - attach_workspace:
          at: /ws
      - build-component:
          component_name: cogserver

  attention:
    executor: opencog-executor
    steps:
      - attach_workspace:
          at: /ws
      - build-component:
          component_name: attention

  spacetime:
    executor: opencog-executor
    steps:
      - attach_workspace:
          at: /ws
      - build-component:
          component_name: spacetime

  pln:
    executor: opencog-executor
    steps:
      - attach_workspace:
          at: /ws
      - build-component:
          component_name: pln

  lg-atomese:
    executor: opencog-executor
    steps:
      - attach_workspace:
          at: /ws
      - build-component:
          component_name: lg-atomese

  learn:
    executor: opencog-executor
    steps:
      - attach_workspace:
          at: /ws
      - build-component:
          component_name: learn

  opencog:
    executor: opencog-executor
    steps:
      - attach_workspace:
          at: /ws
      - run:
          command: |
            git clone --depth 1 https://github.com/$CIRCLE_PROJECT_USERNAME/opencog /ws/opencog
      - run:
          name: CMake Configure
          command: mkdir build && cd build && cmake ..
      - run:
          name: Build
          command: cd build && make -j2
      - run:
          name: Build tests
          command: cd build && make -j2 tests
      - run:
          name: Run tests
          command: cd build && make check
      - run:
          name: Print test log
          command: cat build/tests/Testing/Temporary/LastTest.log
          when: always
      - run:
          name: Install OpenCog
          command: cd build && make -j2 install && ldconfig
      - persist_to_workspace:
          root: /ws/
          paths:
            - opencog

  sensory:
    executor: opencog-executor
    steps:
      - attach_workspace:
          at: /ws
      - build-component:
          component_name: sensory

  evidence:
    executor: opencog-executor
    steps:
      - attach_workspace:
          at: /ws
      - build-component:
          component_name: evidence

  package:
    executor: opencog-executor
    steps:
      - attach_workspace:
          at: /ws/
      - run:
          name: Start storing ccache
          command: date +%d-%m-%Y > /tmp/date
      - save_cache:
          key: ccache-{{ checksum "/tmp/date" }}
          paths:
            - /ws/ccache

workflows:
  version: 2
  build-test-package:
    jobs:
      - cogutil
      - atomspace:
          requires:
            - cogutil
      - unify:
          requires:
            - atomspace
      - ure:
          requires:
            - atomspace
            - unify
      - atomspace-storage:
          requires:
            - atomspace
      - atomspace-rocks:
          requires:
            - atomspace
            - atomspace-storage
      - atomspace-pgres:
          requires:
            - atomspace
            - atomspace-storage
      - cogserver:
          requires:
            - atomspace
            - atomspace-storage
      - attention:
          requires:
            - atomspace
            - cogserver
      - spacetime:
          requires:
            - atomspace
      - pln:
          requires:
            - atomspace
            - unify
            - ure
      - lg-atomese:
          requires:
            - atomspace
      - learn:
          requires:
            - atomspace
      - opencog:
          requires:
            - atomspace
            - unify
            - ure
            - atomspace-storage
            - cogserver
            - attention
            - spacetime
            - pln
            - lg-atomese
      - sensory:
          requires:
            - atomspace
      - evidence:
          requires:
            - atomspace
      - package:
          requires:
            - opencog
            - sensory
            - evidence
            - learn
          filters:
            branches:
              only: master 